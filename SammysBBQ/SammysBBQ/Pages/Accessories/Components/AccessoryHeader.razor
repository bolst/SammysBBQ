@namespace SammysBBQ.Pages.Accessories.Components
@using SammysBBQ.Data
@inject IJSRuntime JSRuntime

<Grid Margin="Margin.IsAuto">
    <Column ColumnSize="ColumnSize.Is2"></Column>
    @if (IsMobile)
    {
        <Column ColumnSize="ColumnSize.Is8" TextAlignment="TextAlignment.Center">
            @HeaderDescription
            @HeaderImage
        </Column>
    }
    else
    {
        <Column ColumnSize="ColumnSize.Is5" TextAlignment="TextAlignment.Center">
            <Div Position="Position.Relative.Top.Is50.Translate.MiddleY">
                @HeaderDescription
            </Div>
        </Column>
        <Column ColumnSize="ColumnSize.Is3" TextAlignment="TextAlignment.Center">
            @HeaderImage
        </Column>
    }
    <Column ColumnSize="ColumnSize.Is2"></Column>
</Grid>

@code {

    private bool IsMobile = false;
    private RenderFragment HeaderDescription = @<Paragraph TextSize="TextSize.ExtraLarge" TextColor="TextColor.Light">
        Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories Description of
        accessories</Paragraph>;
    private RenderFragment HeaderImage = @<Image Source="@ImageSources.CoalWoodGroup" Fluid />;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsMobile = await JSRuntime.InvokeAsync<bool>("isDevice");
        }
        catch (JSDisconnectedException exc)
        {
            Console.WriteLine("Warning: JS DISCONNET");
            Console.WriteLine(exc.StackTrace);
            IsMobile = false;
        }
    }
}